@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as mix;
@use '../abstracts/functions' as fn;
@use 'sass:map';

.posts-grid {
  &__inner {
    display: grid;
    gap: map.get($spacers, 4);
    margin-top: map.get($spacers, 6);
    margin-bottom: map.get($spacers, 6);

    @include mix.breakpoint('sm') {
      grid-template-columns: repeat(2, 1fr);
    }

    @include mix.breakpoint('lg') {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}

.post-card {
  & {
    background-color: map.get($colors, 'white');
    border-radius: map.get($border-radius, 'lg');
    box-shadow: map.get($shadows, 'sm');
    transition: map.get($transitions, 'base');
    height: 100%;
  }

  &__inner {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  &__media {
    position: relative;
    padding-bottom: 56.25%; // 16:9 ratio
    overflow: hidden;
    border-radius: map.get($border-radius, 'lg') map.get($border-radius, 'lg') 0 0;
  }

  &__media-link {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  &__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  &__categories {
    position: absolute;
    top: map.get($spacers, 3);
    left: map.get($spacers, 3);
    display: flex;
    gap: map.get($spacers, 2);
    flex-wrap: wrap;
  }

  &__category {
    display: inline-block;
    padding: map.get($spacers, 1) map.get($spacers, 2);
    background-color: map.get($colors, 'primary');
    color: map.get($colors, 'white');
    font-size: map.get($font-sizes, 'sm');
    border-radius: map.get($border-radius, 'full');
    text-decoration: none;
    transition: map.get($transitions, 'base');

    @include mix.hover {
      background-color: map.get($colors, 'primary-dark');
    }
  }

  &__content {
    padding: map.get($spacers, 4);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  &__meta {
    display: flex;
    align-items: center;
    gap: map.get($spacers, 2);
    margin-bottom: map.get($spacers, 2);
    color: map.get($colors, 'gray', 600);
    font-size: map.get($font-sizes, 'sm');
  }

  &__title {
    margin: 0 0 map.get($spacers, 3);
    font-size: map.get($font-sizes, 'xl');
    line-height: map.get($line-heights, 'tight');

    a {
      color: map.get($colors, 'gray', 900);
      text-decoration: none;
      transition: map.get($transitions, 'base');

      @include mix.hover {
        color: map.get($colors, 'primary');
      }
    }
  }

  &__excerpt {
    color: map.get($colors, 'gray', 700);
    margin-bottom: map.get($spacers, 4);

    p:last-child {
      margin-bottom: 0;
    }
  }

  &__footer {
    margin-top: auto;
    padding-top: map.get($spacers, 3);
    border-top: 1px solid map.get($colors, 'gray', 200);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  &__read-more {
    display: inline-flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    gap: map.get($spacers, 2);
    color: map.get($colors, 'primary');
    text-decoration: none;
    font-weight: 500;
    transition: map.get($transitions, 'base');

    .icon {
      width: 1em;
      height: 1em;
      transition: transform 0.2s ease;
    }

    @include mix.hover {
      color: map.get($colors, 'primary-dark');

      .icon {
        transform: translateX(4px);
      }
    }
  }

  @include mix.hover {
    transform: translateY(-4px);
    box-shadow: map.get($shadows, 'md');

    .post-card__image {
      transform: scale(1.05);
    }
  }
}

// Pagination
.pagination-container {
  margin-top: map.get($spacers, 6);

  .pagination {
    display: flex;
    justify-content: center;
    gap: map.get($spacers, 2);
  }

  .page-numbers {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0 map.get($spacers, 2);
    border-radius: map.get($border-radius, 'md');
    background-color: map.get($colors, 'white');
    color: map.get($colors, 'gray', 700);
    text-decoration: none;
    transition: map.get($transitions, 'base');

    &.current {
      background-color: map.get($colors, 'primary');
      color: map.get($colors, 'white');
    }

    @include mix.hover {
      background-color: map.get($colors, 'gray', 100);
      color: map.get($colors, 'primary');

      &.current {
        background-color: map.get($colors, 'primary-dark');
        color: map.get($colors, 'white');
      }
    }
  }
}
